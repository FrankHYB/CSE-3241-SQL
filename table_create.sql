CREATE TABLE AUTHOR (
  Id   INTEGER PRIMARY KEY,
  Name VARCHAR(100) UNIQUE
);

CREATE TABLE PUBLISHER (
  Id   INTEGER PRIMARY KEY,
  Name VARCHAR(100) UNIQUE
);

CREATE TABLE CATEGORY (
  Id   INTEGER PRIMARY KEY,
  Name VARCHAR(100) UNIQUE
);

CREATE TABLE BOOK (
  Id           INTEGER PRIMARY KEY,
  ISBN         CHARACTER(13) UNIQUE NOT NULL,
  Title        VARCHAR(255),
  Year         CHARACTER(4),
  Price        DOUBLE,
  Publisher_Id INTEGER,
  Category_Id  INTEGER,
  FOREIGN KEY (Publisher_Id) REFERENCES PUBLISHER (Id) ON DELETE SET NULL,
  FOREIGN KEY (Category_Id) REFERENCES CATEGORY (Id) ON DELETE SET NULL
);

CREATE TABLE BOOK_AUTHOR (
  Book_Id   INTEGER,
  Author_Id INTEGER,
  PRIMARY KEY (Book_Id, Author_Id),
  FOREIGN KEY (Book_Id) REFERENCES BOOK (Id) ON DELETE SET NULL,
  FOREIGN KEY (Author_Id) REFERENCES AUTHOR (Id) ON DELETE SET NULL
);

CREATE TABLE CUSTOMER (
  Id              INTEGER PRIMARY KEY AUTOINCREMENT,
  First_Name      VARCHAR(20),
  Last_Name       VARCHAR(20),
  Email           VARCHAR(50) UNIQUE,
  Credit_Card_no  CHARACTER(20),
  Pass_Hash       CHARACTER(66),
  Billing_Address VARCHAR(200),
  Address         VARCHAR(200)
);

CREATE TABLE ORDERS (
  Id            INTEGER PRIMARY KEY,
  Customer_Id   INTEGER,
  Book_Id       INTEGER,
  Quantity      INTEGER,
  Purchase_Date DATETIME,
  FOREIGN KEY (Book_Id) REFERENCES BOOK (Id) ON DELETE SET NULL,
  FOREIGN KEY (Customer_Id) REFERENCES CUSTOMER (Id) ON DELETE SET NULL
);

CREATE TABLE RATING (
  Customer_Id INTEGER,
  Book_Id     INTEGER,
  Star_Count  INTEGER CHECK (Star_Count BETWEEN 1 AND 5),
  Comment     VARCHAR(400),
  FOREIGN KEY (Book_Id) REFERENCES BOOK (Id) ON DELETE SET NULL,
  FOREIGN KEY (Customer_Id) REFERENCES CUSTOMER (Id) ON DELETE SET NULL
);

CREATE TABLE BOOK_STATUS (
  Book_Id           INTEGER,
  One_Star_Count    INTEGER,
  Two_Stars_Count   INTEGER,
  Three_Stars_Count INTEGER,
  Four_Stars_Count  INTEGER,
  Five_Stars_Count  INTEGER,
  Overall_Rating    INTEGER,
  Amount_Sold       INTEGER,
  FOREIGN KEY (Book_Id) REFERENCES BOOK (Id) ON DELETE SET NULL
);

CREATE TABLE BOOK_STOCK (
  Book_Id  INTEGER,
  Quantity INTEGER CHECK (Quantity >= 0)
);

CREATE TABLE SHIPPING_STATUS (
  Order_Id    INTEGER PRIMARY KEY,
  Tracking_No INTEGER,
  FOREIGN KEY (Order_Id) REFERENCES ORDERS (Id) ON DELETE CASCADE
);
