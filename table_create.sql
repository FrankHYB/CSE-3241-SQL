CREATE TABLE BOOK (
  ISBN  CHARACTER(13) PRIMARY KEY,
  Title VARCHAR(255),
  Year  CHARACTER(4),
  Price DOUBLE
);

CREATE TABLE AUTHOR (
  Id   INTEGER PRIMARY KEY,
  Name VARCHAR(100) UNIQUE
);

CREATE TABLE CATEGORY (
  Id   INTEGER PRIMARY KEY,
  Name VARCHAR(100) UNIQUE
);

CREATE TABLE PUBLISHER (
  Id   INTEGER PRIMARY KEY,
  Name VARCHAR(100) UNIQUE
);

CREATE TABLE BOOK_AUTHOR (
  Book_ISBN CHARACTER(13),
  Author_Id INTEGER,
  PRIMARY KEY (Book_ISBN, Author_Id),
  FOREIGN KEY (Book_ISBN) REFERENCES Book (ISBN) ON DELETE SET NULL,
  FOREIGN KEY (Author_Id) REFERENCES AUTHOR (Id) ON DELETE SET NULL
);

CREATE TABLE BOOK_CATEGORY (
  Book_ISBN   CHARACTER(13),
  Category_Id INTEGER,
  PRIMARY KEY (Book_ISBN, Category_Id),
  FOREIGN KEY (Book_ISBN) REFERENCES Book (ISBN) ON DELETE CASCADE,
  FOREIGN KEY (Category_Id) REFERENCES CATEGORY (Id) ON DELETE CASCADE
);

CREATE TABLE BOOK_PUBLISHER (
  Book_ISBN    CHARACTER(13),
  Publisher_Id INTEGER,
  PRIMARY KEY (Book_ISBN, Publisher_Id),
  FOREIGN KEY (Book_ISBN) REFERENCES Book (ISBN) ON DELETE CASCADE,
  FOREIGN KEY (Publisher_Id) REFERENCES PUBLISHER (Id) ON DELETE CASCADE
);

CREATE TABLE CUSTOMER (
  Id                 INTEGER PRIMARY KEY AUTOINCREMENT,
  First_Name         VARCHAR(20),
  Last_Name          VARCHAR(20),
  Email              VARCHAR(50) UNIQUE,
  Pass_Hash          CHARACTER(66),
  Address_Id         INTEGER,
  Credit_Card_Number INTEGER,
  FOREIGN KEY (Address_Id) REFERENCES ADDRESS (Id),
  FOREIGN KEY (Credit_Card_Number) REFERENCES CREDIT_CARD (Credit_Card_Number)
);

CREATE TABLE ORDERS (
  Id            INTEGER PRIMARY KEY AUTOINCREMENT,
  Customer_Id   INTEGER,
  Book_ISBN     CHARACTER(13),
  Quantity      INTEGER,
  Purchase_Date DATETIME,
  FOREIGN KEY (Book_ISBN) REFERENCES Book (ISBN) ON DELETE SET NULL,
  FOREIGN KEY (Customer_Id) REFERENCES CUSTOMER (Id) ON DELETE CASCADE
);

CREATE TABLE RATING (
  Customer_Id INTEGER,
  Book_ISBN   CHARACTER(13),
  Star_Count  INTEGER CHECK (Star_Count BETWEEN 1 AND 5),
  Comment     VARCHAR(400),
  PRIMARY KEY (Customer_Id, Book_ISBN),
  FOREIGN KEY (Book_ISBN) REFERENCES Book (ISBN) ON DELETE CASCADE,
  FOREIGN KEY (Customer_Id) REFERENCES CUSTOMER (Id) ON DELETE CASCADE
);

CREATE TABLE BOOK_STOCK (
  Book_ISBN    CHARACTER(13),
  Warehouse_Id INTEGER,
  Quantity     INTEGER CHECK (Quantity >= 0),
  PRIMARY KEY (Book_ISBN, Warehouse_Id),
  FOREIGN KEY (Warehouse_Id) REFERENCES WAREHOUSE (Id)
);

CREATE TABLE CREDIT_CARD (
  Credit_Card_Number INTEGER PRIMARY KEY,
  CVV_Code           INTEGER,
  Billing_Address    INTEGER,
  FOREIGN KEY (Billing_Address) REFERENCES ADDRESS (Id)
);

CREATE TABLE WAREHOUSE (
  Id         INTEGER PRIMARY KEY,
  Address_Id INTEGER,
  FOREIGN KEY (Address_Id) REFERENCES ADDRESS (Id)
);

CREATE TABLE ADDRESS (
  Id             INTEGER PRIMARY KEY AUTOINCREMENT,
  Name           VARCHAR(50),
  Street_Address VARCHAR(200),
  City           VARCHAR(100),
  State_Code     CHARACTER(2),
  Zip            CHARACTER(5),
  FOREIGN KEY (State_Code) REFERENCES STATE (Code) ON DELETE SET NULL
);

CREATE TABLE STATE (
  Code CHARACTER(2) PRIMARY KEY,
  Name VARCHAR(40)
);

-- Creating index on frequently queried columns
CREATE INDEX BOOK_INDEX ON BOOK (ISBN);
CREATE INDEX RATING_INDEX ON RATING (Book_ISBN);
